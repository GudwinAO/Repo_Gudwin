"""Есть два списка:
tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена'
]
klasses = [
    '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
]
Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
('Иван', '9А')
('Анастасия', '7В')
...
Количество генерируемых кортежей не должно быть больше длины списка tutors.
Если в списке klasses меньше элементов, чем в списке tutors, необходимо вывести последние кортежи в виде:
(<tutor>, None), например:
('Станислав', None)

### Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения.
Подумать, в каких ситуациях генератор даст эффект. """

from itertools import zip_longest


tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена', 'Мухтар', 'Джамшут'
]

klasses = [
    '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9Г'
]

# создаем генератор
def get_tk(x, y):
    if len(y) <= len(x):
        result = list(zip_longest(x, y, fillvalue=None))
        yield result

# доказываем, что класс - генератор
print(type(get_tk(1, 2)))

print(list(get_tk(tutors, klasses)))
