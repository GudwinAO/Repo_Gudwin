# Домашнее задание. Часть 5.

""" Создать список, содержащий цены на товары (10–20 товаров), например:
[57.8, 46.51, 97, ...]
Вывести на экран эти цены через запятую в одну строку,
цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
Вывести цены, отсортированные по возрастанию, новый список не создавать
(доказать, что объект списка после сортировки остался тот же).
Создать новый список, содержащий те же цены, но отсортированные по убыванию.
Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию,
написав минимум кода? """

# создаем наш список цен
price_list = [55, 66.58, 77, 89, 105.5, 12, 66, 89, 205.8, 110, 99, 89, 105, 117, 22.7]

# упаковываем цикл в функцию для многократного вызова после сортировки
def get_price(x):

    # запускаем цикл перебора цен и отделяем рубли от копеек, переводим их в тип "строка" для метода zfill
    for price in x:
        rub = round(price // 1)
        str_rub = str(rub)

        kop = round((price % 1 * 100))
        str_kop = str(kop)

        # выводим f-строкой в 1 строку используя end
        print(f' {str_rub.zfill(2)} r {str_kop.zfill(2)} kk', end=',')

# выполняем первую часть задачи - выводим цены в линию в формате рубли и копейки
print('Подзадача 1:')
price_line = get_price(price_list)

# сортируем список и не меняем данные внутри списка. Тип данных не изменится.
# можно циклом перебрать исходный/сортированный цикл и вывести type в принт по каждому элементу. Но это избыточно

price_list.sort()
# выводим отсортированный по возрастанию цен список вызовом функции
print('\nПодзадача 2:')
price_line_2 = get_price(price_list)

# создаем еще 1 список - копируем наш список в новый список и сортируем новый список по убыванию и снова запросим функцию
# можно использовать append и добавлять элементы 1 списка в другой в порядке убывания, но это хардкор
print('\nПодзадача 3:')
price_list_clone = price_list.copy()
price_list_clone.sort(reverse=True)
price_line_3 = get_price(price_list_clone)

# наш новый список отсортирован по убыванию. Функцией по срезу списка выводим 5 наиболее дорогих товаров. Минимум кода.
print('\nПодзадача 4:')
price_line_4 = get_price(price_list_clone[0:5])


